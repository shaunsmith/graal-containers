version: 0.1
component: build
timeoutInSeconds: 1000
shell: bash
env:
  # these are local variables to the build config
  variables:
    TAG: "jibber-jar-gvmee2130-jdk17:0.0.1"
    JAR_FILE: "jibber-0.0.1-SNAPSHOT-exec.jar" # Must match the value in pom.xml

  # the value of a vaultVariable is the secret-id (in OCI ID format) stored in the OCI Vault service
  # you can then access the value of that secret in your build_spec.yaml commands
  vaultVariables:
    REGISTRY_USER: "ocid1.vaultsecret.oc1.phx.amaaaaaacrsaiiiazc6xelrsfjaug5pzzxumxxnhrof3xb5op2mut5qwghmq"
    REGISTRY_PASS: "ocid1.vaultsecret.oc1.phx.amaaaaaacrsaiiiamrot33leotbnahsjs2zt3c67zfvlvgutzxl46pkqjxoq"

  # exportedVariables are made available to use as parameters in sucessor Build Pipeline stages
  # For this build to run, the Build Pipeline needs to have a BUILDRUN_HASH parameter set
  exportedVariables:
    - BUILDRUN_HASH

steps:
  - type: Command
    name: "Define unique image tag"
    timeoutInSeconds: 140
    command: |
      echo "OCI_BUILD_RUN_ID: ${OCI_BUILD_RUN_ID}"
      export BUILDRUN_HASH=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo "BUILDRUN_HASH: " $BUILDRUN_HASH
  - type: Command
    name: "Pre-build environment checks"
    command: |
      echo "Current dir: $(pwd)"
      echo "Current dir contents: $(ls -alh)"
      echo "Tag : ${TAG}"
  - type: Command
    name: "Docker login"
    command: |
      echo "Do a docker login before running the docker build step"
      echo "REGISTRY_NAME: " ${REGISTRY_NAME}
      docker login ${REGISTRY_NAME} -u ${REGISTRY_USER} -p ${REGISTRY_PASS}
  - type: Command
    name: "Docker build"
    command: |
      echo "Running multistage build to build the JAR and dockerize our app JAR."
      docker build -f ./Dockerfiles/multistage/Dockerfile.gvmee-jar \
                  --build-arg JAR_FILE=${JAR_FILE} \
                  -t ${TAG} .
      echo "DONE"
      printf "List of docker images:\n $(docker images)"  
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          build_result=FAILURE
          echo "Failure successfully handled"
outputArtifacts:
  - name: Build_output_image
    type: DOCKER_IMAGE
    # this is only the locally exported container image name
    # this location tag doesn't effect the tag used to deliver the container image
    # to the Container Registry.
    location: ${TAG}
